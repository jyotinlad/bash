Globs
=====

1) Create a folder called bash_intro_ex1 and move into it

2) Create ten files called 'one', 'two', 'three' and so on up to 'ten'.

3) Run echo to output any of the ten files that have an 'o' in the name.

4) Run echo to output any of the ten files with four characters in it.

5) Run echo to output files that begin with a vowel and have three characters 

6) Create a file called '*'

7) Run ls to output only the file called '*'

8) Try and remove just the file called '*'

9) Create a folder with files with very similar names and use globs to list some and not the others at will.

Variables
=========

1) Create a variable called '*', and echo that variable so that only an asterisk is shown.

2) Research the program ‘grep’. If you already know it, read the grep man page. (Type ‘man grep’).

3) Create a variable 'STILL_THERE' that will persist if you run 'bash' in your terminal and then try to echo it


Stretch Tasks
=============

1) Determine the length of a string.

2) Take the output of `env` in your shell and work out why each item is there and what it might be used by. You may want to use `man bash`, or use google to figure it out. Or you could try re-setting it and see what happens.

3) Research the arrays set in your shell with `declare -a` and looking through the bash man page, and/or googling.
Pipes and Redirects
===================

1) Force an error on the terminal and capture the output, working out if the error was sent to standard output or standard error.

2) Create a folder with several text files in it, and then 'cat' them to a single file. Then 'cat' them again, but append to the file so there are two copies of all files in the new file.

3) Write a command to echo standard output to file descriptor ‘3’.

4) Research what the `|&` pipe operator does. If you can't find out, try the command `cat file2 |& grep -c file` and see what changes compared to when we ran it in the course above.
